{"version":3,"sources":["components/ListItem.js","components/NoData.js","components/ListContainer.js","components/AddItem.js","components/SearchItem.js","components/HeaderTab.js","components/Header.js","components/todoData.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","props","className","type","checked","item","completed","onChange","checkItem","id","text","onClick","removeItem","ListContainer","todoItems","list","map","key","length","NoData","AddItem","handleChange","e","preventDefault","setState","content","target","value","handleSubmit","keyCode","state","name","this","onKeyDown","placeholder","Component","SearchItem","filter","handleSearchItem","HeaderTab","active","Header","setOption","setFilter","options","React","todoData","Main","filterItems","setCompletedFilter","completedFilter","completedFilterActive","filtered","includes","handleAddItem","uuid","v4","Fragment","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f58eaeb4.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ListItem(props) {\n  return (\n    <div className='todo-item clearfix'>\n      <div className='todo-item-left'>\n        <input\n          type='checkbox'\n          checked={props.item.completed}\n          onChange={() => props.checkItem(props.item.id)}\n        />\n        <span className={props.item.completed ? 'completedTask' : ''}>\n          {props.item.text}\n        </span>\n      </div>\n      <div\n        className='removeTask'\n        onClick={() => props.removeItem(props.item.id)}\n      >\n        x\n      </div>\n    </div>\n  );\n}\n\nexport default ListItem;\n","import React from 'react';\n\nconst ListContainer = () => {\n  return <div className='no_data'>You don't have any tasks.</div>;\n};\n\nexport default ListContainer;\n","import React from 'react';\nimport ListItem from './ListItem';\nimport './styles/ListContainer.css';\nimport NoData from './NoData';\n\nconst ListContainer = props => {\n  const todoItems = props.list.map(item => (\n    <ListItem\n      key={item.id}\n      item={item}\n      checkItem={() => props.checkItem(item.id)}\n      removeItem={() => props.removeItem(item.id)}\n    />\n  ));\n\n  return (\n    <div className='container'>\n      <div className='todo-list'>\n        {props.list.length ? todoItems : <NoData />}\n      </div>\n    </div>\n  );\n};\n\nexport default ListContainer;\n","import React, { Component } from 'react';\nimport './styles/AddItem.css';\nclass AddItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      content: ''\n    };\n  }\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({\n      content: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    if (e.keyCode === 13 || e.type === 'click') {\n      if (this.state.content.length > 0) {\n        this.props.handleSubmit(this.state.content);\n        this.setState({ content: '' });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='add_item clearfix'>\n          <input\n            type='text'\n            name='item'\n            value={this.state.content}\n            onChange={this.handleChange}\n            onKeyDown={this.handleSubmit}\n            placeholder='Add a task'\n          />\n          <div className='add_item_button' onClick={this.handleSubmit}>\n            +\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddItem;\n","import React from 'react';\nimport './styles/SearchItem.css';\nconst SearchItem = props => {\n  const handleSearch = e => {\n    let filter = e.target.value;\n    props.handleSearchItem(filter);\n  };\n\n  return (\n    <div className='container'>\n      <div className='search_item'>\n        <input\n          type='text'\n          name='item'\n          onChange={handleSearch}\n          placeholder='Search'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchItem;\n","import React from 'react';\n\nconst HeaderTab = props => {\n  let active = props.active ? ' activeOption' : '';\n  return (\n    <div className='header_option_wrapper'>\n      <div className={'header_option' + active} onClick={props.onClick}>\n        {props.name}\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderTab;\n","import React from 'react';\nimport HeaderTab from './HeaderTab';\nimport './styles/Header.css';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 'Home'\n    };\n\n    this.options = [\n      {\n        name: 'Home',\n        filter: 'all'\n      },\n      {\n        name: 'Completed',\n        filter: true\n      },\n      {\n        name: 'Remaining',\n        filter: false\n      }\n    ];\n  }\n\n  setOption = item => {\n    this.setState({ active: item.name });\n    this.props.setFilter(item.filter);\n  };\n\n  render() {\n    return (\n      <header>\n        <div className='container clearfix'>\n          <div className='header_title'>Todo List</div>\n          <div className='header_options_container'>\n            {this.options.map(item => (\n              <HeaderTab\n                name={item.name}\n                onClick={() => this.setOption(item)}\n                key={item.name}\n                active={item.name === this.state.active}\n              />\n            ))}\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const todoData = [\n  {\n    id: 1,\n    text: 'Get coffee',\n    completed: true\n  },\n  {\n    id: 2,\n    text: 'Buy cake',\n    completed: false\n  },\n  {\n    id: 3,\n    text: 'Eat cake',\n    completed: false\n  },\n  {\n    id: 4,\n    text: 'Repeat',\n    completed: true\n  }\n];\n\nexport default todoData;\n","import React from 'react';\nimport ListContainer from './ListContainer';\nimport AddItem from './AddItem';\nimport SearchItem from './SearchItem';\nimport Header from './Header';\nimport todoData from './todoData';\nimport uuid from 'uuid';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      list: todoData,\n      filtered: todoData,\n      filter: ''\n    };\n  }\n\n  checkItem = id => {\n    const list = this.state.list.map(item => {\n      if (item.id === id) {\n        item.completed = !item.completed;\n      }\n      return item;\n    });\n    this.setState({ list }, this.filterItems);\n  };\n\n  removeItem = id => {\n    let list = this.state.list.filter(item => id !== item.id);\n    this.setState(\n      {\n        list\n      },\n      this.filterItems\n    );\n  };\n\n  setCompletedFilter = filter => {\n    this.setState(\n      {\n        completedFilter: filter,\n        completedFilterActive: filter === 'all' ? false : true\n      },\n      this.filterItems\n    );\n  };\n\n  filterItems = (filter = this.state.filter) => {\n    let list = this.state.list;\n    if (this.state.completedFilterActive) {\n      list = this.state.list.filter(\n        item => item.completed === this.state.completedFilter\n      );\n    }\n    const filtered = list.filter(item => item.text.includes(filter));\n\n    this.setState({\n      filtered,\n      filter\n    });\n  };\n\n  handleAddItem = content => {\n    let list = [\n      ...this.state.list,\n      {\n        id: uuid.v4(),\n        text: content,\n        completed: false\n      }\n    ];\n\n    this.setState(\n      {\n        list\n      },\n      this.filterItems\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header setFilter={this.setCompletedFilter} />\n        <AddItem handleSubmit={this.handleAddItem} />\n        <SearchItem handleSearchItem={this.filterItems} />\n        <ListContainer\n          list={this.state.filtered}\n          checkItem={this.checkItem}\n          removeItem={this.removeItem}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './components/Main';\nimport './components/styles/App.css';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}